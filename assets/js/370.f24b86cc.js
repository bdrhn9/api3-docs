(window.webpackJsonp=window.webpackJsonp||[]).push([[370],{1007:function(t,e,s){"use strict";s.r(e);var a=s(9),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("TitleSpan",[t._v("Functions")]),t._v(" "),s("h1",{attrs:{id:"frontmatter-title"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[t._v("#")]),t._v(" "+t._s(t.$frontmatter.title))]),t._v(" "),s("VersionWarning"),t._v(" "),s("TocHeader"),t._v(" "),s("TOC",{staticClass:"table-of-contents",attrs:{"include-level":[2,3]}}),t._v(" "),s("p",[t._v("For on-chain smart contracts, the function\n"),s("a",{attrs:{href:"https://github.com/api3dao/airnode/blob/master/packages/airnode-protocol/contracts/rrp/requesters/RrpBeaconServer.sol#L363-L383",target:"_blank",rel:"noopener noreferrer"}},[t._v("beaconIdToReaderToWhitelistStatus()"),s("OutboundLink")],1),t._v("\nreturns detailed whitelisting status for the "),s("code",[t._v("reader")]),t._v(" and "),s("code",[t._v("beaconId")]),t._v(" parameters.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Get Whitelisted")]),t._v(" "),s("p",[t._v("Please contact the\n"),s("a",{attrs:{href:"https://api3dao.typeform.com/to/O1Uvxc8m",target:"_blank",rel:"noopener noreferrer"}},[t._v("API3 Business Development API Team"),s("OutboundLink")],1),t._v("\nabout Beacon whitelisting.")])]),t._v(" "),s("h2",{attrs:{id:"example-code"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-code"}},[t._v("#")]),t._v(" Example Code")]),t._v(" "),s("div",{staticClass:"language-solidity line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-solidity"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// SPDX-License-Identifier: MIT")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pragma")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("solidity")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token version number"}},[t._v("0.8.3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@api3/airnode-protocol/contracts/rrp/requesters/interfaces/IRrpBeaconServer.sol"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("mySmartContract")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myReadableDetails")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes32")]),t._v(" _beaconId\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" _beaconContractAddress\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("external")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint64")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" expirationTimestamp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint192")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" indefiniteWhitelistCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Calling the BeaconServer for detailed whitelist status")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// where "this" is the contract address of this contract (myReadableDetails).')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expirationTimestamp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" indefiniteWhitelistCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RrpBeaconServer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_beaconContractAddress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beaconIdToReaderToWhitelistStatus")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        _beaconId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br")])]),s("h2",{attrs:{id:"parameters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[t._v("#")]),t._v(" Parameters")]),t._v(" "),s("p",[s("code",[t._v("beaconIdToReaderToWhitelistStatus(bytes32 beaconId, address reader)")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("bytes32 beaconId")]),t._v(" - The ID of the beacon.")]),t._v(" "),s("li",[s("code",[t._v("address reader")]),t._v(" - The address to get the whitelist details for.")])]),t._v(" "),s("h2",{attrs:{id:"returns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns"}},[t._v("#")]),t._v(" Returns")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("uint64 private expirationTimestamp")]),t._v(" - Timestamp at which the whitelisting of\nthe reader will expire.")]),t._v(" "),s("li",[s("code",[t._v("uint192 indefiniteWhitelistCount")]),t._v(" - Number of times "),s("code",[t._v("reader")]),t._v(" was whitelisted\nindefinitely for "),s("code",[t._v("beaconId")]),t._v(". A reader is indefinitely whitelisted by the\nwhitelist manager account or by any other account that has the\n"),s("a",{attrs:{href:"https://github.com/api3dao/airnode/blob/6d902da259ec3084c8f4764cadc74e270e5c7162/packages/airnode-protocol/contracts/whitelist/WhitelistRoles.sol#L32-L33",target:"_blank",rel:"noopener noreferrer"}},[s("span",{staticStyle:{"overflow-wrap":"break-word"}},[t._v("INDEFINITE_WHITELISTER_ROLE_DESCRIPTION")]),s("OutboundLink")],1),t._v("\nrole. Each time an authorized account indefinitely whitelists the reader a\nrecorded counter is incremented. When the reader's whitelist status is revoked\nthen the counter is decremented. This means that as long as the counter\n("),s("code",[t._v("indefiniteWhitelistCount")]),t._v(") is greater than 0 the reader is whitelisted\nindefinitely.")])]),t._v(" "),s("p",[t._v("When the "),s("code",[t._v("address")]),t._v(" has not been whitelisted this function returns:")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("expirationTimestamp   uint64 "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nindefiniteWhitelistCount   uint192 "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])],1)}),[],!1,null,null,null);e.default=n.exports}}]);